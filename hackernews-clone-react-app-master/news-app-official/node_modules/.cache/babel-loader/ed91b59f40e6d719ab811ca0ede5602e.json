{"ast":null,"code":"import axios from 'axios';\nimport { BASE_API_URL } from './constants';\n\nconst getStory = async id => {\n  try {\n    const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\n    return story;\n  } catch (error) {\n    console.log('Error while getting a story.');\n  }\n};\n\nexport const getStories = async type => {\n  try {\n    const {\n      data: storyIds\n    } = await axios.get(`${BASE_API_URL}/${type}stories.json`);\n    const stories = await Promise.all(storyIds.slice(0, 30).map(getStory));\n    return stories;\n  } catch (error) {\n    console.log('Error while getting list of stories.');\n  }\n};","map":{"version":3,"sources":["/home/ghostexodus/Desktop/hackernews-clone-react-app-master/src/utils/apis.js"],"names":["axios","BASE_API_URL","getStory","id","story","get","error","console","log","getStories","type","data","storyIds","stories","Promise","all","slice","map"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAC7B,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,YAAa,SAAQE,EAAG,OAArC,CAApB;AACA,WAAOC,KAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF,CAPD;;AASA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACxC,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAqB,MAAMZ,KAAK,CAACK,GAAN,CAC9B,GAAEJ,YAAa,IAAGS,IAAK,cADO,CAAjC;AAGA,UAAMG,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkB,EAAlB,EAAsBC,GAAtB,CAA0Bf,QAA1B,CAAZ,CAAtB;AACA,WAAOW,OAAP;AACD,GAND,CAME,OAAOP,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD;AACF,CAVM","sourcesContent":["import axios from 'axios';\nimport { BASE_API_URL } from './constants';\n\nconst getStory = async (id) => {\n  try {\n    const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\n    return story;\n  } catch (error) {\n    console.log('Error while getting a story.');\n  }\n};\n\nexport const getStories = async (type) => {\n  try {\n    const { data: storyIds } = await axios.get(\n      `${BASE_API_URL}/${type}stories.json`\n    );\n    const stories = await Promise.all(storyIds.slice(0, 30).map(getStory));\n    return stories;\n  } catch (error) {\n    console.log('Error while getting list of stories.');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}